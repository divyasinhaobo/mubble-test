import { EventEmitter, OnChanges, ElementRef } from '@angular/core';
import { FormControl, FormGroup, FormBuilder } from '@angular/forms';
import { TrackableScreen } from '../../../ui/router/trackable-screen';
import { RunContextBrowser } from '../../../rc-browser';
import { MatSelectChange, MatDatepickerInputEvent, MatAutocompleteSelectedEvent, MatDatepicker, MatRadioChange, MatCheckboxChange, MatSlideToggleChange, MatButtonToggleChange } from '@angular/material';
import { Observable } from 'rxjs';
import { FileUploadComponent, UploadedDocParams } from '../file-upload/file-upload.component';
import { DISPLAY_TYPE, DISPLAY_MODE, InputParams, SelectionBoxParams } from '@mubble/core';
export declare class InputContainerComponent implements OnChanges {
    protected rc: RunContextBrowser;
    private formBuilder;
    picker: MatDatepicker<any>;
    fileUplInst: FileUploadComponent;
    inputParams: InputParams;
    screen: TrackableScreen;
    webMode: boolean;
    parentCont: ElementRef;
    eventPropagate: boolean;
    displayMode: DISPLAY_MODE;
    displayLabel: boolean;
    value: EventEmitter<any>;
    dropdownOpen: EventEmitter<boolean>;
    inputForm: FormControl;
    dateRange: FormGroup;
    numberRange: FormGroup;
    filteredOptions: Observable<SelectionBoxParams[]>;
    DISPLAY_TYPE: typeof DISPLAY_TYPE;
    DISPLAY_MODE: typeof DISPLAY_MODE;
    private fileUploadParams;
    constructor(rc: RunContextBrowser, formBuilder: FormBuilder);
    ngOnChanges(): void;
    ngOnInit(): void;
    onSubmit(): void;
    isCalanderOpen(): boolean;
    closeCalander(): void;
    selectedOption(event: MatSelectChange | MatRadioChange): void;
    onToggleChane(event: MatSlideToggleChange): void;
    onBtnToggleChange(event: MatButtonToggleChange, index: number): void;
    fileUploadValue(event: UploadedDocParams): void;
    checkedOption(event: MatCheckboxChange, option: SelectionBoxParams): void;
    setChangedValues(event: string): void;
    setDate(event: MatDatepickerInputEvent<Date>): void;
    setDateRange(event: MatDatepickerInputEvent<Date>): void;
    setNumberRange(event: string): void;
    setAutocompleteValue(event: MatAutocompleteSelectedEvent): void;
    displayFn(value: any): string;
    hasError(): boolean;
    dropDownToggle(event: boolean): void;
    valueEntered(value: any): void;
    private initialize;
    private filterOptions;
    private setDisabled;
    private isDateObj;
}
