import { ConnectionInfo, WireEphEvent, WireSysEvent, WireObject, XmnProvider } from '@mubble/core';
import { RunContextBrowser } from '../rc-browser';
import { XmnRouterBase } from './xmn-router-base';
export declare class WsBrowser implements XmnProvider {
    private rc;
    private ci;
    private router;
    private ws;
    private encProvider;
    private timerPing;
    private lastRequestTimer;
    private wsProviderConfig;
    private pendingMessage;
    private socketCreateTs;
    private lastMessageTs;
    private sending;
    private configured;
    private connExpired;
    private lastRequestTs;
    private ephemeralEvents;
    private sessionTimedoutSecs;
    constructor(rc: RunContextBrowser, ci: ConnectionInfo, router: XmnRouterBase);
    private uiArToB64;
    sendEphemeralEvent(event: WireEphEvent): void;
    send(rc: RunContextBrowser, data: WireObject[] | WireObject): string | null;
    requestClose(): void;
    private sendInternal;
    onOpen(): void;
    onMessage(msgEvent: MessageEvent): Promise<void>;
    onError(err: any): void;
    onClose(): void;
    processSysEvent(rc: RunContextBrowser, se: WireSysEvent): Promise<void>;
    private isConnWithinPing;
    private setLastReqTimer;
    private setupTimer;
    private cbRequestTimer;
    private cbTimerPing;
    private cleanup;
}
